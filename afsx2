--afsx
if game.PlaceId == 11545598432 then
    repeat
        wait(1)
    until game:IsLoaded()
    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
    local Window = OrionLib:MakeWindow({Name = "Title of the library", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})
    --Values
    local _Player = game:GetService("Players").LocalPlayer
    local _PlayerName = _Player.Name
    local _PlayerHumanoidRootPart = workspace[_PlayerName]:FindFirstChild("HumanoidRootPart")
    local _PlayerHumanoid = workspace[_PlayerName]:FindFirstChild("Humanoid")
    local _Bossfile = workspace.Scriptable.Bosses
    local _Mobfile = workspace.Scriptable.Mobs
    local _Camera = workspace.Camera
        --Main
        local _autoskill = true
        local _wordadd = nil
        local _wordremove = nil
        --Farm
        local _farmstatchose = nil
        local _farmstat = true
        local _farmjump = true
        local _farmpain = true
    --Tables
        --Main
        local Skilltable = {A = false, B = false, C = false, D = false, E = false, F = false, G = false, H = false, I = false, J = false, K = false, L = false, M = false, N = false, O = false, P = false, Q = false, R = false, S = false, T = false, U = false, V = false, W = false, X = false, Y = false, Z = false}
        --Farm
    --Functions
        --Main
        function autoskill()
            if _autoskill == true then
                for _word, _tf in pairs(Skilltable) do
                    if _tf == true then
                        local _keycode = Enum.KeyCode[_word]
                        keypress("0x"..(_keycode.Value - 56))
                        keyrelease("0x"..(_keycode.Value - 56))
                    end
                end
            end
        end
        --Farm
        function farmstat() --done
            while _farmstat == true do
                wait(0.01)
                if _farmstatchose ~= nil then
                    local args = {
                        [1] = "TrainStat",
                        [2] = _farmstatchose
                    }
                
                    game:GetService("ReplicatedStorage").Events["Stats/RemoteFunction"]:InvokeServer(unpack(args))
                end
            end
        end

        function farmjump() --done
            while _farmjump == true do
                wait(0.01)
                local args = {
                    [1] = "TrainStat",
                    [2] = "Speed"
                }
                
                game:GetService("ReplicatedStorage").Events["Stats/RemoteFunction"]:InvokeServer(unpack(args))
            end
        end

        function farmpain()
            while _farmpain == true do
                if not _Bossfile:FindFirstChild("_pain") then
                    _PlayerHumanoidRootPart.CFrame = workspace.Scriptable.BossBattle.PP.CFrame + Vector3.new(0,0,-10)
                    wait(0.5)
                    local args = {
                        [1] = "Prompt",
                        [2] = "0865d553-91be-4633-b690-daceaa68f91f"
                    }
                    
                    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Prompt/RemoteFunction"):InvokeServer(unpack(args))
                    print("in boss area")
                    _PlayerHumanoidRootPart.CFrame = _PlayerHumanoidRootPart.CFrame + Vector3.new(0,300,0)
                    repeat
                        wait(0.1)
                    until _Bossfile:FindFirstChild("_pain") and _Bossfile._pain:FindFirstChild("HumanoidRootPart")
                    local _painHumanoidRootPart = _Bossfile._pain:FindFirstChild("HumanoidRootPart")
                    _PlayerHumanoidRootPart.CFrame = _painHumanoidRootPart.CFrame + Vector3.new(0,110,0)
                    wait(0.1)
                    repeat
                        _PlayerHumanoidRootPart.Anchored = true
                        _PlayerHumanoidRootPart.CFrame = _painHumanoidRootPart.CFrame + Vector3.new(0,100,0)
                        _PlayerHumanoidRootPart.CFrame = CFrame.new(_PlayerHumanoidRootPart.Position, _painHumanoidRootPart.Position)
                        wait(0.01)
                        autoskill()
                        _PlayerHumanoidRootPart.Anchored = false
                    until _PlayerHumanoid.Health == 0
                    _PlayerHumanoidRootPart.Anchored = false
                    repeat 
                        wait(1)
                    until not _Bossfile:FindFirstChild("_pain") or not _painHumanoidRootPart
                end
            end
        end
    --Tab
        --Main
        local MainTab = Window:MakeTab({
            Name = "Main",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })

        local Section = MainTab:AddSection({
            Name = "Main"
        })

        MainTab:AddToggle({ --value added
            Name = "Auto skill",
            Default = false,
            Callback = function(Value)
                _autoskill = Value
            end    
        })

        MainTab:AddTextbox({ --value added
            Name = "Skill add",
            Default = "",
            TextDisappear = false,
            Callback = function(Value)
                _wordadd = Value
                if string.match(_wordadd, "^[A-Za-z]*$") then
                    _wordadd = string.upper(_wordadd)
                    if Skilltable[_wordadd] ~= nil then
                        Skilltable[_wordadd] = true
                        print("Add ".._wordadd)
                    else
                        print("not work")
                    end
                else
                    print("not work")
                end
            end	  
        })

        MainTab:AddTextbox({ --value added
            Name = "Skill remove",
            Default = "",
            TextDisappear = false,
            Callback = function(Value)
                _wordremove = Value
                if string.match(_wordremove, "^[A-Za-z]*$") then
                    _wordremove = string.upper(_wordremove)
                    if Skilltable[_wordremove] ~= nil then
                        Skilltable[_wordremove] = false
                        print("Remove ".._wordremove)
                    else
                        print("not work")
                    end
                else
                    print("not work")
                end
            end	  
        })

        --Farm
        local FarmTab = Window:MakeTab({
            Name = "Farm",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })

        local Section = FarmTab:AddSection({
            Name = "Auto farm stat"
        })

        FarmTab:AddDropdown({ --value added
            Name = "Chose farm stat",
            Default = "",
            Options = {"Strength", "Durability", "Chakra", "Sword"},
            Callback = function(Value)
                _farmstatchose = Value
            end    
        })

        FarmTab:AddToggle({ --value added --function added
            Name = "Farm jump",
            Default = false,
            Callback = function(Value)
                _farmjump = Value
                farmjump()
            end    
        })

        FarmTab:AddToggle({ --value added --function added
            Name = "Farm stat",
            Default = false,
            Callback = function(Value)
                _farmstat = Value
                farmstat()
            end    
        })

        FarmTab:AddToggle({ --value added
            Name = "Auto pain",
            Default = false,
            Callback = function(Value)
                _farmpain = Value
                farmpain()
            end    
        })
end
