--afsx
if game.PlaceId == 11545598432 then
    repeat
        wait(1)
    until game:IsLoaded()
    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
    local Window = OrionLib:MakeWindow({Name = "afsx hub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})
    --Values
    local _Player = game:GetService("Players").LocalPlayer
    local _PlayerName = _Player.Name
    local _Bossfile = workspace.Scriptable.Bosses
    local _Mobfile = workspace.Scriptable.Mobs
        --Main
        local _autoskill = true
        local _wordadd = nil
        local _wordremove = nil
        --Farm
        local _farmstatchose = nil
        local _farmstat = true
        local _farmjump = true
        local _farmworldboss = true
        local _farmpain = true
        local _Bossdistance = 100
        local _ChoseMob = nil
        local _autoquest = true
        local _QuestMobdistance = 20
        --Setting
        local _equipsword = true
    --Tables
        --Main
        local Skilltable = {A = false, B = false, C = false, D = false, E = false, F = false, G = false, H = false, I = false, J = false, K = false, L = false, M = false, N = false, O = false, P = false, Q = false, R = false, S = false, T = false, U = false, V = false, W = false, X = false, Y = false, Z = false}
        --Farm
        --Setting
        local IgnoreBoss = {_ape = false, _arlongo = false, _armoredTitan = false, _desertBoss = false, _friezy = false, _handDemon = false}
    --Functions
    function moveto(position) --done
        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame + Vector3.new(0,500,0)
        while (position - workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Position).magnitude > 10 do
            local direction = (position - workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Position).unit
            workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Velocity = direction * 150
            wait()
        end
        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Velocity = Vector3.new(0, 0, 0)
    end
        --Main
        function autoskill() --done
            if _autoskill == true then
                for _word, _tf in pairs(Skilltable) do
                    if _tf == true then
                        if _word == "A" then
                            keypress(0x41)
                            keyrelease(0x41)
                        end
                        if _word == "B" then
                            keypress(0x42)
                            keyrelease(0x42)
                        end
                        if _word == "C" then
                            keypress(0x43)
                            keyrelease(0x43)
                        end
                        if _word == "D" then
                            keypress(0x44)
                            keyrelease(0x44)
                        end
                        if _word == "E" then
                            keypress(0x45)
                            keyrelease(0x45)
                        end
                        if _word == "F" then
                            keypress(0x46)
                            keyrelease(0x46)
                        end
                        if _word == "G" then
                            keypress(0x47)
                            keyrelease(0x47)
                        end
                        if _word == "H" then
                            keypress(0x48)
                            keyrelease(0x48)
                        end
                        if _word == "I" then
                            keypress(0x49)
                            keyrelease(0x49)
                        end
                        if _word == "J" then
                            keypress(0x4A)
                            keyrelease(0x4A)
                        end
                        if _word == "K" then
                            keypress(0x4B)
                            keyrelease(0x4B)
                        end
                        if _word == "L" then
                            keypress(0x4C)
                            keyrelease(0x4C)
                        end
                        if _word == "M" then
                            keypress(0x4D)
                            keyrelease(0x4D)
                        end
                        if _word == "N" then
                            keypress(0x4E)
                            keyrelease(0x4E)
                        end
                        if _word == "O" then
                            keypress(0x4F)
                            keyrelease(0x4F)
                        end
                        if _word == "P" then
                            keypress(0x50)
                            keyrelease(0x50)
                        end
                        if _word == "Q" then
                            keypress(0x51)
                            keyrelease(0x51)
                        end
                        if _word == "R" then
                            keypress(0x52)
                            keyrelease(0x52)
                        end
                        if _word == "S" then
                            keypress(0x53)
                            keyrelease(0x53)
                        end
                        if _word == "T" then
                            keypress(0x54)
                            keyrelease(0x54)
                        end
                        if _word == "U" then
                            keypress(0x55)
                            keyrelease(0x55)
                        end
                        if _word == "V" then
                            keypress(0x56)
                            keyrelease(0x56)
                        end
                        if _word == "W" then
                            keypress(0x57)
                            keyrelease(0x57)
                        end
                        if _word == "X" then
                            keypress(0x58)
                            keyrelease(0x58)
                        end
                        if _word == "Y" then
                            keypress(0x59)
                            keyrelease(0x59)
                        end
                        if _word == "Z" then
                            keypress(0x5A)
                            keyrelease(0x5A)
                        end
                    end
                end
            end
        end

        function hopserver(_jobid) --done
            local _TPS = game:GetService("TeleportService")
            local _place = game.PlaceId
            _TPS:TeleportToPlaceInstance(_place,_jobid,_Player)
        end
        --Farm
        function farmstat() --done
            while _farmstat == true do
                wait(0.01)
                if _farmstatchose ~= nil then
                    local args = {
                        [1] = "TrainStat",
                        [2] = _farmstatchose
                    }
                
                    game:GetService("ReplicatedStorage").Events["Stats/RemoteFunction"]:InvokeServer(unpack(args))
                end
            end
        end

        function farmjump() --done
            while _farmjump == true do
                wait(0.01)
                local args = {
                    [1] = "TrainStat",
                    [2] = "Speed"
                }
                
                game:GetService("ReplicatedStorage").Events["Stats/RemoteFunction"]:InvokeServer(unpack(args))
            end
        end

        function farmworldboss() --done
            while _farmworldboss == true do
                wait(0.1)
                if _Bossfile:FindFirstChildOfClass("Model") and IgnoreBoss[_Bossfile:FindFirstChildOfClass("Model").Name] ~= nil and IgnoreBoss[_Bossfile:FindFirstChildOfClass("Model").Name] == false then
                    local _PlayerStayingPlace = workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame
                    local _Boss = _Bossfile:FindFirstChildOfClass("Model")
                    local _BossName = _Boss.Name
                    moveto(_Boss.WorldPivot.Position + Vector3.new(0,_Bossdistance,0))
                    workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = true
                    repeat
                        wait(0.01)
                    until _Boss:FindFirstChild("HumanoidRootPart")
                    local _BossHumanoidRootPart = _Boss:FindFirstChild("HumanoidRootPart")
                    workspace.Camera.CFrame = CFrame.new(-33.9159927, 105.433418, -193.31192, -0.97657299, 0.211917371, -0.037366841, 0, 0.173648596, 0.98480767, 0.215186551, 0.96173656, -0.169580519)
                    wait(0.5)
                    repeat
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = true
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = _BossHumanoidRootPart.CFrame + Vector3.new(0,_Bossdistance,0)
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Position, _BossHumanoidRootPart.Position)
                        wait(0.01)
                        autoskill()
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = false
                        if _farmworldboss == false then
                            break
                        end
                    until not _Bossfile:FindFirstChild(_BossName) or not _Bossfile[_BossName]:FindFirstChild("HumanoidRootPart")
                    workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = false
                    workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = _PlayerStayingPlace
                end
            end
        end

        function farmpain() --done
            while _farmpain == true do
                if not _Bossfile:FindFirstChild("_pain") then
                    workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = workspace.Scriptable.BossBattle.PP.CFrame + Vector3.new(0,0,-10)
                    wait(1)
                    local args = {
                        [1] = "Prompt",
                        [2] = workspace.Scriptable.BossBattle.PP.PromptAttachment:GetAttribute("ID")
                    }
                    
                    game:GetService("ReplicatedStorage").Events["Prompt/RemoteFunction"]:InvokeServer(unpack(args))
                    print("in boss area")
                    workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame + Vector3.new(0,300,0)
                    repeat
                        wait(0.1)
                    until _Bossfile:FindFirstChild("_pain") and _Bossfile._pain:FindFirstChild("HumanoidRootPart")
                    local _painHumanoidRootPart = _Bossfile._pain:FindFirstChild("HumanoidRootPart")
                    workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = _painHumanoidRootPart.CFrame + Vector3.new(0,_Bossdistance,0)
                    workspace.Camera.CFrame = CFrame.new(-33.9159927, 105.433418, -193.31192, -0.97657299, 0.211917371, -0.037366841, 0, 0.173648596, 0.98480767, 0.215186551, 0.96173656, -0.169580519)
                    wait(0.1)
                    repeat
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = true
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = _painHumanoidRootPart.CFrame + Vector3.new(0,_Bossdistance,0)
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Position, _painHumanoidRootPart.Position)
                        wait(0.01)
                        autoskill()
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = false
                        if _farmpain == false then
                            workspace[_PlayerName]:FindFirstChild("Humanoid").Health = 0
                        end
                    until workspace[_PlayerName]:FindFirstChild("Humanoid").Health == 0
                    workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = false
                    repeat 
                        wait(1)
                    until not _Bossfile:FindFirstChild("_pain") or not _painHumanoidRootPart
                end
            end
        end

        function autoquest()
            while _autoquest == true do
                wait(0.1)
                if _ChoseMob ~= nil then
                    if _ChoseMob == "Thug" or _ChoseMob == "cyclop" or _ChoseMob == "nomu" then
                        _questname = "BanditQuest"
                    elseif _ChoseMob == "sandChunin" or _ChoseMob == "sandJonin" then
                        _questname = "BanditQuest2"
                    elseif _ChoseMob == "pirate" or _ChoseMob == "brute" or _ChoseMob == "yeti" then
                        _questname = "BanditQuest3"
                    elseif _ChoseMob == "Demon" or _ChoseMob == "strongDemon" or _ChoseMob == "arrowDemon" then
                        _questname = "BanditQuest4"
                    elseif _ChoseMob == "evilSaiyan" or _ChoseMob == "strongSaiyan" or _ChoseMob == "saiyanCaptain" then
                        _questname = "BanditQuest5"
                    elseif _ChoseMob == "freezaTroop" or _ChoseMob == "jinyuSquad"then
                        _questname = "BanditQuest6"
                    elseif _ChoseMob == "yakuza" or _ChoseMob == "yakuzacommander" or _ChoseMob == "stain" then
                        _questname = "BanditQuest7"
                    end
                    if _ChoseMob == "Thug" or _ChoseMob == "sandChunin" or _ChoseMob == "pirate" or _ChoseMob == "Demon" or _ChoseMob == "evilSaiyan" or _ChoseMob == "freezaTroop" or _ChoseMob == "yakuza" then
                        _questnumber = 1
                    elseif _ChoseMob == "cyclop" or _ChoseMob == "sandJonin" or _ChoseMob == "brute" or _ChoseMob == "strongDemon" or _ChoseMob == "strongSaiyan" or _ChoseMob == "jinyuSquad" or _ChoseMob == "yakuzacommander" then
                        _questnumber = 2
                    elseif _ChoseMob == "nomu" or _ChoseMob == "yeti" or _ChoseMob == "arrowDemon" or _ChoseMob == "saiyanCaptain" or _ChoseMob == "stain" then
                        _questnumber = 3
                    end
                    if _questname ~= nil and _questnumber ~= nil then
                        print(_questname)
                        print(_questnumber)
                        print(_ChoseMob)
                        local args = {
                            [1] = "StartQuest",
                            [2] = _questname,
                            [3] = _questnumber
                        }
                    
                        game:GetService("ReplicatedStorage").Events["Quests/RemoteEvent"]:FireServer(unpack(args))
                        wait(1)
                        local args = {
                            [1] = "Follow",
                            [2] = _questname
                        }
                        
                        game:GetService("ReplicatedStorage").Events["Quests/RemoteEvent"]:FireServer(unpack(args))
                        repeat 
                            wait(1)
                            if not game:GetService("Players").LocalPlayer.PlayerGui.Menu:FindFirstChild("FollowingQuest") then
                                local args = {
                                    [1] = "Follow",
                                    [2] = _questname
                                }
                                
                                game:GetService("ReplicatedStorage").Events["Quests/RemoteEvent"]:FireServer(unpack(args))
                                print("quest not show")
                                wait(0.5)
                            end
                            for _, mob in pairs(_Mobfile:GetChildren()) do
                                if mob.Name == _ChoseMob or mob.Name == _ChoseMob.."1" or mob.Name == _ChoseMob.."2" or mob.Name == _ChoseMob.."3" then
                                    _MonInFileName = mob
                                end
                            end
                            workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = _MonInFileName.WorldPivot + Vector3.new(0,_QuestMobdistance,0)
                            workspace.Camera.CFrame = CFrame.new(-33.9159927, 105.433418, -193.31192, -0.97657299, 0.211917371, -0.037366841, 0, 0.173648596, 0.98480767, 0.215186551, 0.96173656, -0.169580519)
                            repeat
                                wait()
                            until _MonInFileName:FindFirstChild("HumanoidRootPart")
                            local _MobHumanoidRootPart = _MonInFileName:FindFirstChild("HumanoidRootPart")
                            repeat
                                workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = false
                                wait()
                                workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = true
                                workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = _MobHumanoidRootPart.CFrame + Vector3.new(0,_QuestMobdistance,0)
                                workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Position, _MobHumanoidRootPart.Position)
                                wait(0.5)
                                autoskill()
                                if _autoquest == false then
                                    break
                                end
                            until not _MonInFileName or not _MonInFileName:FindFirstChild("HumanoidRootPart")
                            print("mob died")
                            if _autoquest == false then
                                break
                            end
                        until game:GetService("Players").LocalPlayer.PlayerGui.Menu:FindFirstChild("FollowingQuest").progress["1"].Percentage.Text == "100%"
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = false
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").CFrame = workspace.Scriptable.NPC.Quests[_questname].WorldPivot + Vector3.new(0,5,0)
                        wait(1)
                        local args = {
                            [1] = "Prompt",
                            [2] = workspace.Scriptable.NPC.Quests[_questname].HumanoidRootPart.PromptAttachment:GetAttribute("ID")
                        }
                        
                        game:GetService("ReplicatedStorage").Events["Prompt/RemoteFunction"]:InvokeServer(unpack(args))
                        workspace[_PlayerName]:FindFirstChild("HumanoidRootPart").Anchored = false
                        wait(3)
                    end
                else
                    print("not chose mob")
                    break
                end
            end
        end

        --Setting
        function equipsword() --done
            while _equipsword == true do
                wait(0.01)
                if workspace[_PlayerName].Humanoid.Health == 0 then
                    repeat
                        wait(0.01)
                    until workspace[_PlayerName].Humanoid.Health == workspace[_PlayerName].Humanoid.MaxHealth
                    wait(3)
                    keypress(0x34)
                end
            end
        end
    --Tab
        --Main
        local MainTab = Window:MakeTab({
            Name = "Main",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })

        local Section = MainTab:AddSection({
            Name = "Skill"
        })

        MainTab:AddToggle({ --value added
            Name = "Auto skill",
            Default = false,
            Callback = function(Value)
                _autoskill = Value
            end    
        })

        MainTab:AddTextbox({ --value added
            Name = "Skill add",
            Default = "",
            TextDisappear = false,
            Callback = function(Value)
                _wordadd = Value
                if string.match(_wordadd, "^[A-Za-z]*$") then
                    _wordadd = string.upper(_wordadd)
                    if Skilltable[_wordadd] ~= nil then
                        Skilltable[_wordadd] = true
                        print("Add ".._wordadd)
                    else
                        print("not work")
                    end
                else
                    print("not work")
                end
            end	  
        })

        MainTab:AddTextbox({ --value added
            Name = "Skill remove",
            Default = "",
            TextDisappear = false,
            Callback = function(Value)
                _wordremove = Value
                if string.match(_wordremove, "^[A-Za-z]*$") then
                    _wordremove = string.upper(_wordremove)
                    if Skilltable[_wordremove] ~= nil then
                        Skilltable[_wordremove] = false
                        print("Remove ".._wordremove)
                    else
                        print("not work")
                    end
                else
                    print("not work")
                end
            end	  
        })

        local Section = MainTab:AddSection({
            Name = "Hop server"
        })

        MainTab:AddButton({ --done
            Name = "Rejoin server",
            Callback = function()
                hopserver(game.JobId)
            end    
        })

        MainTab:AddButton({ --done
            Name = "Hop low player server",
            Callback = function()
                local Http = game:GetService("HttpService")
                local Api = "https://games.roblox.com/v1/games/"
                local _place = game.PlaceId
                local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"
                function ListServers(cursor)
                    local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
                    return Http:JSONDecode(Raw)
                end
 
                local Server, Next; repeat
                    local Servers = ListServers(Next)
                    Server = Servers.data[1]
                    Next = Servers.nextPageCursor
                until Server
                if Server.id ~= game.JobId then
                    hopserver(Server.id)
                else
                    local _hopnumber = 1 
                    repeat
                        local Server, Next; repeat
                            local Servers = ListServers(Next)
                            Server = Servers.data[_hopnumber + 1]
                            Next = Servers.nextPageCursor
                        until Server
                    until Server.id ~= game.JobId
                    hopserver(Server.id)
                end
            end    
        })

        --Farm
        local FarmTab = Window:MakeTab({
            Name = "Farm",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })

        local Section = FarmTab:AddSection({
            Name = "Auto farm stat"
        })

        FarmTab:AddDropdown({ --value added
            Name = "Chose farm stat",
            Default = "",
            Options = {"Strength", "Durability", "Chakra", "Sword"},
            Callback = function(Value)
                _farmstatchose = Value
            end    
        })

        FarmTab:AddToggle({ --value added --function added
            Name = "Farm stat",
            Default = false,
            Callback = function(Value)
                _farmstat = Value
                farmstat()
            end    
        })

        FarmTab:AddToggle({ --value added --function added
            Name = "Farm jump",
            Default = false,
            Callback = function(Value)
                _farmjump = Value
                farmjump()
            end    
        })

        local Section = FarmTab:AddSection({
            Name = "Auto farm bosses"
        })

        FarmTab:AddLabel("You can go setting to ignore bosses")

        FarmTab:AddToggle({ --value added
            Name = "Auto world boss",
            Default = false,
            Callback = function(Value)
                _farmworldboss = Value
                farmworldboss()
            end    
        })

        FarmTab:AddToggle({ --value added --function added
            Name = "Auto pain",
            Default = false,
            Callback = function(Value)
                _farmpain = Value
                farmpain()
            end    
        })

        FarmTab:AddSlider({ --value added
            Name = "Boss distance",
            Min = 0,
            Max = 150,
            Default = 100,
            Color = Color3.fromRGB(255,255,255),
            Increment = 1,
            ValueName = "distance",
            Callback = function(Value)
                _Bossdistance = Value
            end    
        })

        local Section = FarmTab:AddSection({
            Name = "Quest"
        })

        FarmTab:AddDropdown({ --value added
            Name = "Chose quest",
            Default = "",
            Options = {"Thug", "cyclop", "nomu",
            "sandChunin", "sandJonin", 
            "pirate", "brute", "yeti", 
            "Demon", "strongDemon", "arrowDemon", 
            "evilSaiyan", "strongSaiyan", "saiyanCaptain", 
            "freezaTroop", "jinyuSquad", 
            "yakuza", "yakuzacommander", "stain"},
            Callback = function(Value)
                _ChoseMob = Value
            end    
        })

        FarmTab:AddToggle({ --value added --function added
            Name = "Auto quest",
            Default = false,
            Callback = function(Value)
                _autoquest = Value
                autoquest()
            end    
        })

        FarmTab:AddSlider({ --value added
            Name = "Quest distance",
            Min = 0,
            Max = 150,
            Default = 20,
            Color = Color3.fromRGB(255,255,255),
            Increment = 1,
            ValueName = "distance",
            Callback = function(Value)
                _QuestMobdistance = Value
            end    
        })
        --Setting
        local SettingTab = Window:MakeTab({
            Name = "Setting",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })

        local Section = SettingTab:AddSection({
            Name = "Setting"
        })

        SettingTab:AddToggle({ --value added --function done
            Name = "Auto equip sword after die",
            Default = false,
            Callback = function(Value)
                _equipsword = Value
                equipsword()
            end    
        })

        local Section = SettingTab:AddSection({
            Name = "Ignore Boss"
        })

        SettingTab:AddToggle({ --done
            Name = "Arlongo",
            Default = false,
            Callback = function(Value)
                if Value == true then
                    IgnoreBoss._arlongo = true
                elseif Value == false then
                    IgnoreBoss._arlongo = false
                end
            end    
        })

        SettingTab:AddToggle({ --done
            Name = "Hand Demon",
            Default = false,
            Callback = function(Value)
                if Value == true then
                    IgnoreBoss._handDemon = true
                elseif Value == false then
                    IgnoreBoss._handDemon = false
                end
            end    
        })

        SettingTab:AddToggle({ --done
            Name = "Armored Titan",
            Default = false,
            Callback = function(Value)
                if Value == true then
                    IgnoreBoss._armoredTitan = true
                elseif Value == false then
                    IgnoreBoss._armoredTitan = false
                end
            end    
        })

        SettingTab:AddToggle({ --done
            Name = "Shukaku",
            Default = false,
            Callback = function(Value)
                if Value == true then
                    IgnoreBoss._desertBoss = true
                elseif Value == false then
                    IgnoreBoss._desertBoss = false
                end
            end    
        })

        SettingTab:AddToggle({ --done
            Name = "Friezy",
            Default = false,
            Callback = function(Value)
                if Value == true then
                    IgnoreBoss._friezy = true
                elseif Value == false then
                    IgnoreBoss._friezy = false
                end
            end    
        })

        SettingTab:AddToggle({ --done
            Name = "Monkey",
            Default = false,
            Callback = function(Value)
                if Value == true then
                    IgnoreBoss._ape = true
                elseif Value == false then
                    IgnoreBoss._ape = false
                end
            end    
        })
    --end
end
